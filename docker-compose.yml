version: '2.1'

services:
  zk1:
    image: zookeeper:3.4.10
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zk1:2888:3888 server.2=zk2:2888:3888 server.3=zk3:2888:3888
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 5s
      timeout: 3s
      retries: 3

  zk2:
    image: zookeeper:3.4.10
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zk1:2888:3888 server.2=zk2:2888:3888 server.3=zk3:2888:3888
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 5s
      timeout: 3s
      retries: 3

  zk3:
    image: zookeeper:3.4.10
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zk1:2888:3888 server.2=zk2:2888:3888 server.3=zk3:2888:3888
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 5s
      timeout: 3s
      retries: 3

  master:
    image: shuaicj/spark-master:2.1.1
    environment:
      SPARK_DAEMON_JAVA_OPTS: -Dspark.deploy.recoveryMode=ZOOKEEPER -Dspark.deploy.zookeeper.url=zk1:2181,zk2:2181,zk3:2181
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 5s
      timeout: 3s
      retries: 3
    depends_on:
      zk1:
        condition: service_healthy
      zk2:
        condition: service_healthy
      zk3:
        condition: service_healthy

  masterb:
    image: shuaicj/spark-master:2.1.1
    environment:
      SPARK_DAEMON_JAVA_OPTS: -Dspark.deploy.recoveryMode=ZOOKEEPER -Dspark.deploy.zookeeper.url=zk1:2181,zk2:2181,zk3:2181
    ports:
      - 8081:8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 5s
      timeout: 3s
      retries: 3
    depends_on:
      master:
        condition: service_healthy

  slave:
    image: shuaicj/spark-slave:2.1.1
    command: spark://master:7077
    depends_on:
      master:
        condition: service_healthy

  driver:
    image: shuaicj/spark-driver:2.1.1
    volumes:
      - ./sample:/spark/sample
      - ~:/spark/home
    working_dir: /spark/home
    depends_on:
      master:
        condition: service_healthy
